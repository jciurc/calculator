import { AboutSlint, VerticalBox, Button, TextEdit  } from "std-widgets.slint";
import { Styles } from "styles.slint";

export component MainWindow inherits Window {
    width: 600px;
    height: 800px;
    background: transparent;

    in property <string> expression: "";
    in property <string> display: "0";

    callback callback(string) ;

    forward-focus: my-key-handler;
    my-key-handler := FocusScope {
        key-pressed(event) => {
            if (event.text == Key.Return) {
                root.callback("=");
            }
            if (event.text == Key.Backspace) {
                root.callback("⌫");
            }
            if ((event.modifiers.control && event.text == Key.Backspace) || event.text == "c") {
                root.callback("C");
            }
            if (event.text != Key.Shift && event.text != Key.Control && event.text != Key.Return) {
                root.callback(event.text);
            }
            accept
        }
    }

    Rectangle {
        background: @linear-gradient(135deg, rgb(73, 82, 94),rgb(71, 71, 89));
        border-color: Styles.gradient;
        border-width: 5px;
        border-radius: 30px;
    }

    VerticalLayout {
        padding: Styles.margin;
        Text {
            text: root.expression;

            height: 6rem;
            vertical-alignment: center;
            horizontal-alignment: right;

            font-size: 20px;
            font-family: "Lucida Console";
            opacity: 0.8;
        }
        Text {
            text: root.display;

            height: 200px;
            vertical-alignment: center;
            horizontal-alignment: right;

            font-size: 30px;
            font-weight: 800;
            font-family: "Lucida Console";
        }

        GridLayout {
            padding: Styles.margin;
            spacing: Styles.margin;

            Row {
                Button { text: "7"; clicked => { root.callback("7") } }
                Button { text: "8"; clicked => { root.callback("8") } }
                Button { text: "9"; clicked => { root.callback("9") } }
                Button { text: "%"; clicked => { root.callback("%") } }
                Button { text: "^"; clicked => { root.callback("^") } }
                Button { text: "⌫"; clicked => { root.callback("⌫") } }
            }
            Row {
                Button { text: "4"; clicked => { root.callback("4") } }
                Button { text: "5"; clicked => { root.callback("5") } }
                Button { text: "6"; clicked => { root.callback("6") } }
                Button { text: "/"; clicked => { root.callback("/") } }
                Button { text: "*"; clicked => { root.callback("*") } }
                Button { text: "-"; clicked => { root.callback("-") } }
            }
            Row {
                Button { text: "1"; clicked => { root.callback("1") } }
                Button { text: "2"; clicked => { root.callback("2") } }
                Button { text: "3"; clicked => { root.callback("3") } }
                Button { text: "("; clicked => { root.callback("(") } }
                Button { text: ")"; clicked => { root.callback(")") } }
                Button { text: "+"; clicked => { root.callback("+") } }
            }
            Row {
                Button { text: "0"; clicked => { root.callback("0") } }
                Button { text: "."; clicked => { root.callback(".") } }
                Button { text: "C"; clicked => { root.callback("C") } }
                Button { text: "="; colspan: 3; clicked => { root.callback("=") }}

            }
        }
    }
}
